DROP TABLE IF EXISTS DNA_RNF.RNF_EVENT;

CREATE TABLE DNA_RNF.RNF_EVENT AS

SELECT 
    ROW_NUMBER() OVER(ORDER BY ACCOUNT_ID, ACTIVITY_DATE_TIME, LAST_MODIFIED_DATE) as EVENT_ID,
    *
FROM (
    SELECT
        ACCOUNT_ID,
        ACTIVITY_DATE_TIME,
        EVENT_WHO_ID,
        EVENT_TYPE,
        EVENT_POST_MEETING_STATUS_C,
        IS_GROUP_EVENT,
        IS_PRIVATE_EVENT,
        EVENT_OCCUR,
        THEATRE_C,
        AREA_C,
        REGION_C,
        SUB_REGION_C,
        COUNT(DISTINCT LAST_MODIFIED_DATE) as NUMBER_ATTEMPTS,
        STRING_AGG(EVENT_DIVISION_C, ';') as EVENT_DIVISIONS,
        MAX(LAST_MODIFIED_DATE) as LAST_MODIFIED_DATE
    FROM
        (SELECT DISTINCT 
            ACCOUNT_ID::TEXT AS ACCOUNT_ID,
            ACTIVITY_DATE_TIME::TIMESTAMP WITHOUT TIME ZONE AS ACTIVITY_DATE_TIME,
            COALESCE(TYPE, ACTIVITY_TYPE_C)::TEXT AS EVENT_TYPE, 
            POST_MEETING_STATUS_C::TEXT AS EVENT_POST_MEETING_STATUS_C,
            DIVISION_C::TEXT AS EVENT_DIVISION_C,
            DID_THE_MEETING_TAKE_PLACE_FORMULA_C::BOOLEAN AS EVENT_OCCUR,
            IS_GROUP_EVENT::BOOLEAN AS IS_GROUP_EVENT,
            IS_PRIVATE::BOOLEAN AS IS_PRIVATE_EVENT,
            WHO_ID::TEXT as EVENT_WHO_ID,
            THEATRE_C::TEXT AS THEATRE_C,
            AREA_C::TEXT AS AREA_C,
            REGION_C::TEXT AS REGION_C,
            SUB_REGION_C::TEXT AS SUB_REGION_C,
            LAST_MODIFIED_DATE::TIMESTAMP AS LAST_MODIFIED_DATE
        FROM 
            dna_etl.SFDC_EVENT
        WHERE
            ACCOUNT_ID IS NOT NULL
            AND ACTIVITY_DATE_TIME IS NOT NULL
        ) temp1
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12
    )temp2 ;